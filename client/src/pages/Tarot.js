import React, { useState, useEffect } from 'react'
import axios from "axios";
import { useMutation } from '@apollo/client';
import { useQuery } from '@apollo/client';
import { SAVE_TAROT } from '../utils/mutations';
import { QUERY_CARD } from '../utils/queries';
import TarotCard from '../components/TarotCard';

const Tarot = () => {
    // set initial state of tarot cards
    const [tarotCards, setTarotCards] = useState({ loveCard: '', careerCard: '', financeCard: ''});
    // set initial state of card reads
    const [tarotRead, setTarotRead] = useState({ love: '', career: '', finance: ''});
    // change button value
    const [buttonValue, setButtonValue] = useState("false");

    // saveTarotRead function
    const [ saveTarot, {error} ] = useMutation(SAVE_TAROT);

    const checkToken = localStorage.getItem("id_token");

    if (!checkToken) {
      return <h1>Please log in to view this page.</h1>
    };

    // api info imported from dotenv
    const userID = process.env.REACT_APP_USER_ID;
    const apiKey = process.env.REACT_APP_API_KEY;

    // to be called on button click
    const handleCardPull = (event) => {
      const { id } = event.target;
      const pullCard = function() {
        // define random number function
        const randomNumber = function(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min + 1)) + min;
        }
        // call function with numbers between 1 and 78
        return randomNumber(1,78);
      };
      // generates random number
      const number = pullCard();
      // checks which category of card to update with random number
      if (id === "love") {
        setTarotCards({...tarotCards, loveCard: number});
        event.target.src = "./assets/images/check.png";
        event.target.width = "150";
        event.target.height = "150";
      };
      if (id === "career") {
        setTarotCards({...tarotCards, careerCard: number});
        event.target.src = "./assets/images/check.png";
        event.target.width = "150";
        event.target.height = "150";
      };
      if (id === "finance") {
        setTarotCards({...tarotCards, financeCard: number});
        event.target.src = "./assets/images/check.png";
        event.target.width = "150";
        event.target.height = "150";
      };
    };

    // add tarot reading to mongo database
    const generateReading = async(event) => {
      if (buttonValue === "false") {
        setButtonValue("true");
      }
      event.target.style.display = "none";
      tarotData(love, career, finance);
    };

    const saveFunction = async function() {
      try {
        const reading = JSON.stringify({...tarotRead});
        console.log(reading);
        const { data } = await saveTarot({
          variables: {reading: reading},
        });
        if (buttonValue === "true") {
          setButtonValue("false");
        }
        // clear form values
        setTarotRead({
          loveCard: '',
          careerCard: '',
          financeCard: ''
        });
        // clear form values
        setTarotCards({
          loveCard: '',
          careerCard: '',
          financeCard: ''
        });
        window.location.reload();
      } catch (e) {
        console.error(e);
      }
    };
    
    // Cards randomly generated by buttons to be passed through the API
    const love = tarotCards.loveCard;
    const career = tarotCards.careerCard;
    const finance = tarotCards.financeCard;

    // defining tarot data function
    const tarotData = function(love, career, finance)  {
      // defining function
      const getResponse = (love, career, finance) => {
        const url = "https://json.astrologyapi.com/v1/tarot_predictions";
        const auth = "Basic" + " " + btoa(userID + ":" + apiKey);
        axios.post(url, {
          love: love,
          career: career,
          finance: finance
          }, {
          headers: {
            Authorization: auth
          }
          }).then((response) => {
          const loveReading = response.data.love;
          const careerReading = response.data.career;
          const financeReading = response.data.finance;
          setTarotRead({love: loveReading, career: careerReading, finance: financeReading});
        });
      };
      // calling function
      getResponse(love, career, finance);
    };

    // conditional to check if all cards have been pulled
    const checkAllCards = (love && career && finance !== "");

    // calling tarot function (empty array so it runs once)
    useEffect(() => {
      console.log(tarotCards);
    }, [tarotCards]);

    // logging information to console only after state change
    useEffect(() => {
      console.log(tarotRead);
    }, [tarotRead]);

  return (
    <div>
      {checkAllCards ? (
        // if all cards have been pulled render this
        <div>
          <button className="btn btn-primary" value={buttonValue} onClick={generateReading}>
            Generate Reading
          </button>
        </div>
        ) : (
        // if not all cards have been pulled render this
        <div className="p-5">
            <h1>Tarot Reading</h1>
            <p>Tarot, a deck of 78 cards, holds a tapestry of stories and symbols. From their European origins to modern divination, Tarot has found its place in helping individuals uncover hidden truths, make decisions, and find clarity.</p>
            <p>Tarot is a powerful tool for uncovering insights and finding clarity. It has two main parts: the Minor Arcana and the Major Arcana.</p>
            <p>The Minor Arcana has 56 cards, divided into four suits, like a regular deck of cards. Each suit represents different parts of life, such as emotions or thoughts, and helps us understand day-to-day situations.</p>
            <p>The Major Arcana has 22 special cards with deep meanings, like The Fool or The Empress. These cards signify big life events or important lessons.</p>
            <p>During a reading, Tarot cards are drawn to tell a story and provide guidance. Tarot readers use their intuition and knowledge to interpret the cards and help you find answers about your past, present, or future. Whether it's about love, work, or personal growth, Tarot can light your way on life's journey."</p>
            <p>Click on each card to generate a reading regarding love, career, and finance!</p>
            <div className="d-flex justify-content-around align-items-center">
              <img id="love" className="btn" onClick={handleCardPull} src="./assets/images/tarotcards/CardBacks.jpg"/>
              <img id="career" className="btn" onClick={handleCardPull} src="./assets/images/tarotcards/CardBacks.jpg"/>
              <img id="finance" className="btn" onClick={handleCardPull} src="./assets/images/tarotcards/CardBacks.jpg"/>
            </div>
        </div>
      )}
      { buttonValue === "true" ? (
        // if generate reading button has been clicked, render this
        <section>
          <div className="d-flex justify-content-around text-center">
            <div className="m-2 p-2 content border border-dark">
              <h1 className="p-2">Love</h1>
              <TarotCard className="p-2" id={love}/>
              <p className="p-4">{tarotRead.love}</p>
            </div>
            <div className="m-2 p-2 content border border-dark">
              <h1 className="p-2">Career</h1>
              <TarotCard className="p-2" id={career}/>
              <p className="p-4">{tarotRead.career}</p>
            </div>
            <div className="m-2 p-2 content border border-dark">
              <h1 className="p-2">Finance</h1>
              <TarotCard className="p-2" id={finance}/>
              <p className="p-4">{tarotRead.finance}</p>
            </div>
          </div>
          <div className="d-flex flex-column align-items-center">
            <button className="m-4 p-4 btn btn-primary" onClick={saveFunction}>Save</button>
          </div>
        </section>
      ) : ( 
        <p></p> 
      )}
    </div>
  )
};

export default Tarot;